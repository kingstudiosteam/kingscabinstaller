name: Build Multi-Blend Enhanced Plugin

on:
  push:
    branches: [ main, multi-blend-enhanced-v0.2.0 ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, multi-blend-enhanced-v0.2.0 ]

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        brew install cmake
        brew install pkg-config
        
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        
    - name: Build
      run: |
        cd build
        make -j$(sysctl -n hw.ncpu)
        
    - name: Create VST3 package
      run: |
        cd build
        mkdir -p Multi-Blend-Enhanced-macOS
        cp -r CrossFX_artefacts/Release/VST3/* Multi-Blend-Enhanced-macOS/
        cp -r CrossFX_artefacts/Release/AU/* Multi-Blend-Enhanced-macOS/
        zip -r Multi-Blend-Enhanced-macOS-v0.2.0.zip Multi-Blend-Enhanced-macOS/
        
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Multi-Blend-Enhanced-macOS-v0.2.0
        path: build/Multi-Blend-Enhanced-macOS-v0.2.0.zip

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 16 2019"
        
    - name: Build
      run: |
        cd build
        cmake --build . --config Release
        
    - name: Create VST3 package
      run: |
        cd build
        mkdir Multi-Blend-Enhanced-Windows
        copy CrossFX_artefacts\Release\VST3\* Multi-Blend-Enhanced-Windows\
        7z a Multi-Blend-Enhanced-Windows-v0.2.0.zip Multi-Blend-Enhanced-Windows\
        
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Multi-Blend-Enhanced-Windows-v0.2.0
        path: build/Multi-Blend-Enhanced-Windows-v0.2.0.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake pkg-config
        sudo apt-get install -y libasound2-dev libfreetype6-dev libx11-dev libxrandr-dev
        
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        
    - name: Build
      run: |
        cd build
        make -j$(nproc)
        
    - name: Create VST3 package
      run: |
        cd build
        mkdir -p Multi-Blend-Enhanced-Linux
        cp -r CrossFX_artefacts/Release/VST3/* Multi-Blend-Enhanced-Linux/
        zip -r Multi-Blend-Enhanced-Linux-v0.2.0.zip Multi-Blend-Enhanced-Linux/
        
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Multi-Blend-Enhanced-Linux-v0.2.0
        path: build/Multi-Blend-Enhanced-Linux-v0.2.0.zip

  test:
    runs-on: ubuntu-latest
    needs: [build-linux]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake pkg-config
        sudo apt-get install -y libasound2-dev libfreetype6-dev libx11-dev libxrandr-dev
        
    - name: Run tests
      run: |
        chmod +x run_tests.sh
        ./run_tests.sh
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          TEST_REPORT.md
          LOGIC_PRO_READY.md

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows, build-linux, test]
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Multi-Blend-Enhanced-macOS-v0.2.0/Multi-Blend-Enhanced-macOS-v0.2.0.zip
          Multi-Blend-Enhanced-Windows-v0.2.0/Multi-Blend-Enhanced-Windows-v0.2.0.zip
          Multi-Blend-Enhanced-Linux-v0.2.0/Multi-Blend-Enhanced-Linux-v0.2.0.zip
        body: |
          # Multi-Blend Enhanced v0.2.0
          
          ## ðŸŽ‰ Professional Clipper/Limiter Plugin
          
          ### Features
          - **5 Clipper Algorithms:** Soft Tanh, Hard Clip, Cubic, Hermite, Foldback
          - **3 Limiter Types:** Feedback, Feedforward, Look-Ahead
          - **Comprehensive Controls:** Threshold, Ceiling, Attack, Release, Ratio, Knee
          - **Real-time Metering:** Gain reduction, input/output levels
          
          ### Safety
          - âœ… **Crash-proof:** Comprehensive error handling
          - âœ… **Memory safe:** Smart pointers and RAII
          - âœ… **Thread safe:** Atomic operations for real-time audio
          - âœ… **Logic Pro compatible:** VST3 and AU support
          
          ### Installation
          1. Extract the appropriate zip file for your platform
          2. Copy VST3 to your DAW's VST3 folder
          3. Restart your DAW
          4. Load as Audio Effect
          
          ### System Requirements
          - **macOS:** 10.14+ (Intel/Apple Silicon)
          - **Windows:** 10+ (x64)
          - **Linux:** Ubuntu 18.04+ (x64)
          - **CPU:** Intel i3 / AMD Ryzen 3 or equivalent
          - **RAM:** 4GB minimum, 8GB recommended
          
          ### Documentation
          - [Build Guide](BUILD_GUIDE.md)
          - [Test Report](TEST_REPORT.md)
          - [Logic Pro Ready](LOGIC_PRO_READY.md)
          
          ---
          
          **Plugin Version:** 0.2.0  
          **Build Date:** ${{ github.event.head_commit.timestamp }}  
          **Status:** âœ… Ready for Logic Pro
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}